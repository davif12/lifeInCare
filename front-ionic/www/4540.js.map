{"version":3,"file":"4540.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-segment-view.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, h, e as Host, f as getElement } from './index-527b9e34.js';\n\nconst segmentViewIosCss = \":host{display:-ms-flexbox;display:flex;height:100%;overflow-x:scroll;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;scrollbar-width:none;-ms-overflow-style:none}:host::-webkit-scrollbar{display:none}:host(.segment-view-disabled){-ms-touch-action:none;touch-action:none;overflow-x:hidden}:host(.segment-view-scroll-disabled){pointer-events:none}:host(.segment-view-disabled){opacity:0.3}\";\nconst IonSegmentViewIosStyle0 = segmentViewIosCss;\n\nconst segmentViewMdCss = \":host{display:-ms-flexbox;display:flex;height:100%;overflow-x:scroll;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;scrollbar-width:none;-ms-overflow-style:none}:host::-webkit-scrollbar{display:none}:host(.segment-view-disabled){-ms-touch-action:none;touch-action:none;overflow-x:hidden}:host(.segment-view-scroll-disabled){pointer-events:none}:host(.segment-view-disabled){opacity:0.3}\";\nconst IonSegmentViewMdStyle0 = segmentViewMdCss;\n\nconst SegmentView = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionSegmentViewScroll = createEvent(this, \"ionSegmentViewScroll\", 7);\n        this.scrollEndTimeout = null;\n        this.isTouching = false;\n        this.disabled = false;\n        this.isManualScroll = undefined;\n    }\n    handleScroll(ev) {\n        var _a;\n        const { scrollLeft, scrollWidth, clientWidth } = ev.target;\n        const scrollRatio = scrollLeft / (scrollWidth - clientWidth);\n        this.ionSegmentViewScroll.emit({\n            scrollRatio,\n            isManualScroll: (_a = this.isManualScroll) !== null && _a !== void 0 ? _a : true,\n        });\n        // Reset the timeout to check for scroll end\n        this.resetScrollEndTimeout();\n    }\n    /**\n     * Handle touch start event to know when the user is actively dragging the segment view.\n     */\n    handleScrollStart() {\n        if (this.scrollEndTimeout) {\n            clearTimeout(this.scrollEndTimeout);\n            this.scrollEndTimeout = null;\n        }\n        this.isTouching = true;\n    }\n    /**\n     * Handle touch end event to know when the user is no longer dragging the segment view.\n     */\n    handleTouchEnd() {\n        this.isTouching = false;\n    }\n    /**\n     * Reset the scroll end detection timer. This is called on every scroll event.\n     */\n    resetScrollEndTimeout() {\n        if (this.scrollEndTimeout) {\n            clearTimeout(this.scrollEndTimeout);\n            this.scrollEndTimeout = null;\n        }\n        this.scrollEndTimeout = setTimeout(() => {\n            this.checkForScrollEnd();\n        }, \n        // Setting this to a lower value may result in inconsistencies in behavior\n        // across browsers (particularly Firefox).\n        // Ideally, all of this logic is removed once the scroll end event is\n        // supported on all browsers (https://caniuse.com/?search=scrollend)\n        100);\n    }\n    /**\n     * Check if the scroll has ended and the user is not actively touching.\n     * If the conditions are met (active content is enabled and no active touch),\n     * reset the scroll position and emit the scroll end event.\n     */\n    checkForScrollEnd() {\n        // Only emit scroll end event if the active content is not disabled and\n        // the user is not touching the segment view\n        if (!this.isTouching) {\n            this.isManualScroll = undefined;\n        }\n    }\n    /**\n     * @internal\n     *\n     * This method is used to programmatically set the displayed segment content\n     * in the segment view. Calling this method will update the `value` of the\n     * corresponding segment button.\n     *\n     * @param id: The id of the segment content to display.\n     * @param smoothScroll: Whether to animate the scroll transition.\n     */\n    async setContent(id, smoothScroll = true) {\n        const contents = this.getSegmentContents();\n        const index = contents.findIndex((content) => content.id === id);\n        if (index === -1)\n            return;\n        this.isManualScroll = false;\n        this.resetScrollEndTimeout();\n        const contentWidth = this.el.offsetWidth;\n        this.el.scrollTo({\n            top: 0,\n            left: index * contentWidth,\n            behavior: smoothScroll ? 'smooth' : 'instant',\n        });\n    }\n    getSegmentContents() {\n        return Array.from(this.el.querySelectorAll('ion-segment-content'));\n    }\n    render() {\n        const { disabled, isManualScroll } = this;\n        return (h(Host, { key: 'fa528d2d9ae0f00fc3067defe2a047dce77c814a', class: {\n                'segment-view-disabled': disabled,\n                'segment-view-scroll-disabled': isManualScroll === false,\n            } }, h(\"slot\", { key: '74dc8b4d073caeff1bab272d11b9ea3e1a215954' })));\n    }\n    get el() { return getElement(this); }\n};\nSegmentView.style = {\n    ios: IonSegmentViewIosStyle0,\n    md: IonSegmentViewMdStyle0\n};\n\nexport { SegmentView as ion_segment_view };\n"],"names":["r","registerInstance","c","createEvent","h","e","Host","f","getElement","segmentViewIosCss","IonSegmentViewIosStyle0","segmentViewMdCss","IonSegmentViewMdStyle0","SegmentView","constructor","hostRef","ionSegmentViewScroll","scrollEndTimeout","isTouching","disabled","isManualScroll","undefined","handleScroll","ev","_a","scrollLeft","scrollWidth","clientWidth","target","scrollRatio","emit","resetScrollEndTimeout","handleScrollStart","clearTimeout","handleTouchEnd","setTimeout","checkForScrollEnd","setContent","id","smoothScroll","_this","_asyncToGenerator","contents","getSegmentContents","index","findIndex","content","contentWidth","el","offsetWidth","scrollTo","top","left","behavior","Array","from","querySelectorAll","render","key","class","style","ios","md","ion_segment_view"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}