{"version":3,"file":"469.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, w as writeTask, h, e as Host, f as getElement, i as forceUpdate } from './index-527b9e34.js';\nimport { r as raf, a as addEventListener, b as removeEventListener, h as inheritAttributes } from './helpers-78efeec3.js';\nimport { i as isRTL } from './dir-babeabeb.js';\nimport { c as createColorClasses, h as hostContext } from './theme-01f3f29c.js';\nimport { b as getIonMode } from './ionic-global-ca86cf32.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:grid;grid-auto-columns:1fr;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto;grid-auto-columns:minmax(-webkit-min-content, 1fr);grid-auto-columns:minmax(min-content, 1fr)}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0;width:auto}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\nconst IonSegmentIosStyle0 = segmentIosCss;\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:grid;grid-auto-columns:1fr;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto;grid-auto-columns:minmax(-webkit-min-content, 1fr);grid-auto-columns:minmax(min-content, 1fr)}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent;grid-auto-columns:minmax(auto, 360px)}:host(.in-toolbar){min-height:var(--min-height)}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\nconst IonSegmentMdStyle0 = segmentMdCss;\n\nconst Segment = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.segmentViewEl = null;\n        this.onClick = (ev) => {\n            const current = ev.target;\n            const previous = this.checked;\n            // If the current element is a segment then that means\n            // the user tried to swipe to a segment button and\n            // click a segment button at the same time so we should\n            // not update the checked segment button\n            if (current.tagName === 'ION-SEGMENT') {\n                return;\n            }\n            this.value = current.value;\n            if (current !== previous) {\n                this.emitValueChange();\n            }\n            if (this.segmentViewEl) {\n                this.updateSegmentView();\n                if (this.scrollable && previous) {\n                    this.checkButton(previous, current);\n                }\n            }\n            else if (this.scrollable || !this.swipeGesture) {\n                if (previous) {\n                    this.checkButton(previous, current);\n                }\n                else {\n                    this.setCheckedClasses();\n                }\n            }\n        };\n        this.onSlottedItemsChange = () => {\n            /**\n             * When the slotted segment buttons change we need to\n             * ensure that the new segment buttons are checked if\n             * the value matches the segment button value.\n             */\n            this.valueChanged(this.value);\n        };\n        this.getSegmentButton = (selector) => {\n            var _a, _b;\n            const buttons = this.getButtons().filter((button) => !button.disabled);\n            const currIndex = buttons.findIndex((button) => button === document.activeElement);\n            switch (selector) {\n                case 'first':\n                    return buttons[0];\n                case 'last':\n                    return buttons[buttons.length - 1];\n                case 'next':\n                    return (_a = buttons[currIndex + 1]) !== null && _a !== void 0 ? _a : buttons[0];\n                case 'previous':\n                    return (_b = buttons[currIndex - 1]) !== null && _b !== void 0 ? _b : buttons[buttons.length - 1];\n                default:\n                    return null;\n            }\n        };\n        this.activated = false;\n        this.color = undefined;\n        this.disabled = false;\n        this.scrollable = false;\n        this.swipeGesture = true;\n        this.value = undefined;\n        this.selectOnFocus = false;\n    }\n    colorChanged(value, oldValue) {\n        /**\n         * If color is set after not having\n         * previously been set (or vice versa),\n         * we need to emit style so the segment-buttons\n         * can apply their color classes properly.\n         */\n        if ((oldValue === undefined && value !== undefined) || (oldValue !== undefined && value === undefined)) {\n            this.emitStyle();\n        }\n    }\n    swipeGestureChanged() {\n        this.gestureChanged();\n    }\n    valueChanged(value, oldValue) {\n        // Force a value to exist if we're using a segment view\n        if (this.segmentViewEl && value === undefined) {\n            this.value = this.getButtons()[0].value;\n            return;\n        }\n        if (oldValue !== undefined && value !== undefined) {\n            const buttons = this.getButtons();\n            const previous = buttons.find((button) => button.value === oldValue);\n            const current = buttons.find((button) => button.value === value);\n            if (previous && current) {\n                if (!this.segmentViewEl) {\n                    this.checkButton(previous, current);\n                }\n                else if (this.triggerScrollOnValueChange !== false) {\n                    this.updateSegmentView();\n                }\n            }\n        }\n        else if (value !== undefined && oldValue === undefined && this.segmentViewEl) {\n            this.updateSegmentView();\n        }\n        /**\n         * `ionSelect` is emitted every time the value changes (internal or external changes).\n         * Used by `ion-segment-button` to determine if the button should be checked.\n         */\n        this.ionSelect.emit({ value });\n        // The scroll listener should handle scrolling the active button into view as needed\n        if (!this.segmentViewEl) {\n            this.scrollActiveButtonIntoView();\n        }\n        this.triggerScrollOnValueChange = undefined;\n    }\n    disabledChanged() {\n        this.gestureChanged();\n        if (!this.segmentViewEl) {\n            const buttons = this.getButtons();\n            for (const button of buttons) {\n                button.disabled = this.disabled;\n            }\n        }\n        else {\n            this.segmentViewEl.disabled = this.disabled;\n        }\n    }\n    gestureChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\n        }\n    }\n    connectedCallback() {\n        this.emitStyle();\n        this.segmentViewEl = this.getSegmentView();\n    }\n    disconnectedCallback() {\n        this.segmentViewEl = null;\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    async componentDidLoad() {\n        this.segmentViewEl = this.getSegmentView();\n        this.setCheckedClasses();\n        /**\n         * We need to wait for the buttons to all be rendered\n         * before we can scroll.\n         */\n        raf(() => {\n            /**\n             * When the segment loads for the first\n             * time we just want to snap the active button into\n             * place instead of scroll. Smooth scrolling should only\n             * happen when the user interacts with the segment.\n             */\n            this.scrollActiveButtonIntoView(false);\n        });\n        this.gesture = (await import('./index-39782642.js')).createGesture({\n            el: this.el,\n            gestureName: 'segment',\n            gesturePriority: 100,\n            threshold: 0,\n            passive: false,\n            onStart: (ev) => this.onStart(ev),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.gestureChanged();\n        if (this.disabled) {\n            this.disabledChanged();\n        }\n        // Update segment view based on the initial value,\n        // but do not animate the scroll\n        this.updateSegmentView(false);\n    }\n    onStart(detail) {\n        this.valueBeforeGesture = this.value;\n        this.activate(detail);\n    }\n    onMove(detail) {\n        this.setNextIndex(detail);\n    }\n    onEnd(detail) {\n        this.setActivated(false);\n        this.setNextIndex(detail, true);\n        detail.event.stopImmediatePropagation();\n        const value = this.value;\n        if (value !== undefined) {\n            if (this.valueBeforeGesture !== value) {\n                this.emitValueChange();\n                this.updateSegmentView();\n            }\n        }\n        this.valueBeforeGesture = undefined;\n    }\n    /**\n     * Emits an `ionChange` event.\n     *\n     * This API should be called for user committed changes.\n     * This API should not be used for external value changes.\n     */\n    emitValueChange() {\n        const { value } = this;\n        this.ionChange.emit({ value });\n    }\n    getButtons() {\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    }\n    get checked() {\n        return this.getButtons().find((button) => button.value === this.value);\n    }\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n    setActivated(activated) {\n        const buttons = this.getButtons();\n        buttons.forEach((button) => {\n            button.classList.toggle('segment-button-activated', activated);\n        });\n        this.activated = activated;\n    }\n    activate(detail) {\n        const clicked = detail.event.target;\n        const buttons = this.getButtons();\n        const checked = buttons.find((button) => button.value === this.value);\n        // Make sure we are only checking for activation on a segment button\n        // since disabled buttons will get the click on the segment\n        if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n            return;\n        }\n        // If there are no checked buttons, set the current button to checked\n        if (!checked) {\n            this.value = clicked.value;\n            this.setCheckedClasses();\n        }\n        // If the gesture began on the clicked button with the indicator\n        // then we should activate the indicator\n        if (this.value === clicked.value) {\n            this.setActivated(true);\n        }\n    }\n    getIndicator(button) {\n        const root = button.shadowRoot || button;\n        return root.querySelector('.segment-button-indicator');\n    }\n    checkButton(previous, current) {\n        const previousIndicator = this.getIndicator(previous);\n        const currentIndicator = this.getIndicator(current);\n        if (previousIndicator === null || currentIndicator === null) {\n            return;\n        }\n        const previousClientRect = previousIndicator.getBoundingClientRect();\n        const currentClientRect = currentIndicator.getBoundingClientRect();\n        const widthDelta = previousClientRect.width / currentClientRect.width;\n        const xPosition = previousClientRect.left - currentClientRect.left;\n        // Scale the indicator width to match the previous indicator width\n        // and translate it on top of the previous indicator\n        const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n        writeTask(() => {\n            // Remove the transition before positioning on top of the previous indicator\n            currentIndicator.classList.remove('segment-button-indicator-animated');\n            currentIndicator.style.setProperty('transform', transform);\n            // Force a repaint to ensure the transform happens\n            currentIndicator.getBoundingClientRect();\n            // Add the transition to move the indicator into place\n            currentIndicator.classList.add('segment-button-indicator-animated');\n            // Remove the transform to slide the indicator back to the button clicked\n            currentIndicator.style.setProperty('transform', '');\n            this.scrollActiveButtonIntoView(true);\n        });\n        this.value = current.value;\n        this.setCheckedClasses();\n    }\n    setCheckedClasses() {\n        const buttons = this.getButtons();\n        const index = buttons.findIndex((button) => button.value === this.value);\n        const next = index + 1;\n        for (const button of buttons) {\n            button.classList.remove('segment-button-after-checked');\n        }\n        if (next < buttons.length) {\n            buttons[next].classList.add('segment-button-after-checked');\n        }\n    }\n    getSegmentView() {\n        const buttons = this.getButtons();\n        // Get the first button with a contentId\n        const firstContentId = buttons.find((button) => button.contentId);\n        // Get the segment content with an id matching the button's contentId\n        const segmentContent = document.querySelector(`ion-segment-content[id=\"${firstContentId === null || firstContentId === void 0 ? void 0 : firstContentId.contentId}\"]`);\n        // Return the segment view for that matching segment content\n        return segmentContent === null || segmentContent === void 0 ? void 0 : segmentContent.closest('ion-segment-view');\n    }\n    handleSegmentViewScroll(ev) {\n        const { scrollRatio, isManualScroll } = ev.detail;\n        if (!isManualScroll) {\n            return;\n        }\n        const dispatchedFrom = ev.target;\n        const segmentViewEl = this.segmentViewEl;\n        const segmentEl = this.el;\n        // Only update the indicator if the event was dispatched from the correct segment view\n        if (ev.composedPath().includes(segmentViewEl) || (dispatchedFrom === null || dispatchedFrom === void 0 ? void 0 : dispatchedFrom.contains(segmentEl))) {\n            const buttons = this.getButtons();\n            // If no buttons are found or there is no value set then do nothing\n            if (!buttons.length)\n                return;\n            const index = buttons.findIndex((button) => button.value === this.value);\n            const current = buttons[index];\n            const nextIndex = Math.round(scrollRatio * (buttons.length - 1));\n            if (this.lastNextIndex === undefined || this.lastNextIndex !== nextIndex) {\n                this.lastNextIndex = nextIndex;\n                this.triggerScrollOnValueChange = false;\n                this.checkButton(current, buttons[nextIndex]);\n                this.emitValueChange();\n            }\n        }\n    }\n    /**\n     * Finds the related segment view and sets its current content\n     * based on the selected segment button. This method\n     * should be called on initial load of the segment,\n     * after the gesture is completed (if dragging between segments)\n     * and when a segment button is clicked directly.\n     */\n    updateSegmentView(smoothScroll = true) {\n        const buttons = this.getButtons();\n        const button = buttons.find((btn) => btn.value === this.value);\n        // If the button does not have a contentId then there is\n        // no associated segment view to update\n        if (!(button === null || button === void 0 ? void 0 : button.contentId)) {\n            return;\n        }\n        const segmentView = this.segmentViewEl;\n        if (segmentView) {\n            segmentView.setContent(button.contentId, smoothScroll);\n        }\n    }\n    scrollActiveButtonIntoView(smoothScroll = true) {\n        const { scrollable, value, el } = this;\n        if (scrollable) {\n            const buttons = this.getButtons();\n            const activeButton = buttons.find((button) => button.value === value);\n            if (activeButton !== undefined) {\n                const scrollContainerBox = el.getBoundingClientRect();\n                const activeButtonBox = activeButton.getBoundingClientRect();\n                /**\n                 * Subtract the active button x position from the scroll\n                 * container x position. This will give us the x position\n                 * of the active button within the scroll container.\n                 */\n                const activeButtonLeft = activeButtonBox.x - scrollContainerBox.x;\n                /**\n                 * If we just used activeButtonLeft, then the active button\n                 * would be aligned with the left edge of the scroll container.\n                 * Instead, we want the segment button to be centered. As a result,\n                 * we subtract half of the scroll container width. This will position\n                 * the left edge of the active button at the midpoint of the scroll container.\n                 * We then add half of the active button width. This will position the active\n                 * button such that the midpoint of the active button is at the midpoint of the\n                 * scroll container.\n                 */\n                const centeredX = activeButtonLeft - scrollContainerBox.width / 2 + activeButtonBox.width / 2;\n                /**\n                 * newScrollPosition is the absolute scroll position that the\n                 * container needs to move to in order to center the active button.\n                 * It is calculated by adding the current scroll position\n                 * (scrollLeft) to the offset needed to center the button\n                 * (centeredX).\n                 */\n                const newScrollPosition = el.scrollLeft + centeredX;\n                /**\n                 * We intentionally use scrollTo here instead of scrollIntoView\n                 * to avoid a WebKit bug where accelerated animations break\n                 * when using scrollIntoView. Using scrollIntoView will cause the\n                 * segment container to jump during the transition and then snap into place.\n                 * This is because scrollIntoView can potentially cause parent element\n                 * containers to also scroll. scrollTo does not have this same behavior, so\n                 * we use this API instead.\n                 *\n                 * scrollTo is used instead of scrollBy because there is a\n                 * Webkit bug that causes scrollBy to not work smoothly when\n                 * the active button is near the edge of the scroll container.\n                 * This leads to the buttons to jump around during the transition.\n                 *\n                 * Note that if there is not enough scrolling space to center the element\n                 * within the scroll container, the browser will attempt\n                 * to center by as much as it can.\n                 */\n                el.scrollTo({\n                    top: 0,\n                    left: newScrollPosition,\n                    behavior: smoothScroll ? 'smooth' : 'instant',\n                });\n            }\n        }\n    }\n    setNextIndex(detail, isEnd = false) {\n        const rtl = isRTL(this.el);\n        const activated = this.activated;\n        const buttons = this.getButtons();\n        const index = buttons.findIndex((button) => button.value === this.value);\n        const previous = buttons[index];\n        let current;\n        let nextIndex;\n        if (index === -1) {\n            return;\n        }\n        // Get the element that the touch event started on in case\n        // it was the checked button, then we will move the indicator\n        const rect = previous.getBoundingClientRect();\n        const left = rect.left;\n        const width = rect.width;\n        // Get the element that the gesture is on top of based on the currentX of the\n        // gesture event and the Y coordinate of the starting element, since the gesture\n        // can move up and down off of the segment\n        const currentX = detail.currentX;\n        const previousY = rect.top + rect.height / 2;\n        /**\n         * Segment can be used inside the shadow dom\n         * so doing document.elementFromPoint would never\n         * return a segment button in that instance.\n         * We use getRootNode to which will return the parent\n         * shadow root if used inside a shadow component and\n         * returns document otherwise.\n         */\n        const root = this.el.getRootNode();\n        const nextEl = root.elementFromPoint(currentX, previousY);\n        const decreaseIndex = rtl ? currentX > left + width : currentX < left;\n        const increaseIndex = rtl ? currentX < left : currentX > left + width;\n        // If the indicator is currently activated then we have started the gesture\n        // on top of the checked button so we need to slide the indicator\n        // by checking the button next to it as we move\n        if (activated && !isEnd) {\n            // Decrease index, move left in LTR & right in RTL\n            if (decreaseIndex) {\n                const newIndex = index - 1;\n                if (newIndex >= 0) {\n                    nextIndex = newIndex;\n                }\n                // Increase index, moves right in LTR & left in RTL\n            }\n            else if (increaseIndex) {\n                if (activated && !isEnd) {\n                    const newIndex = index + 1;\n                    if (newIndex < buttons.length) {\n                        nextIndex = newIndex;\n                    }\n                }\n            }\n            if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n                current = buttons[nextIndex];\n            }\n        }\n        // If the indicator is not activated then we will just set the indicator\n        // to the element where the gesture ended\n        if (!activated && isEnd) {\n            current = nextEl;\n        }\n        if (current != null) {\n            /**\n             * If current element is ion-segment then that means\n             * user tried to select a disabled ion-segment-button,\n             * and we should not update the ripple.\n             */\n            if (current.tagName === 'ION-SEGMENT') {\n                return false;\n            }\n            if (previous !== current) {\n                this.checkButton(previous, current);\n            }\n        }\n        return true;\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            segment: true,\n        });\n    }\n    onKeyDown(ev) {\n        const rtl = isRTL(this.el);\n        let keyDownSelectsButton = this.selectOnFocus;\n        let current;\n        switch (ev.key) {\n            case 'ArrowRight':\n                ev.preventDefault();\n                current = rtl ? this.getSegmentButton('previous') : this.getSegmentButton('next');\n                break;\n            case 'ArrowLeft':\n                ev.preventDefault();\n                current = rtl ? this.getSegmentButton('next') : this.getSegmentButton('previous');\n                break;\n            case 'Home':\n                ev.preventDefault();\n                current = this.getSegmentButton('first');\n                break;\n            case 'End':\n                ev.preventDefault();\n                current = this.getSegmentButton('last');\n                break;\n            case ' ':\n            case 'Enter':\n                ev.preventDefault();\n                current = document.activeElement;\n                keyDownSelectsButton = true;\n        }\n        if (!current) {\n            return;\n        }\n        if (keyDownSelectsButton) {\n            const previous = this.checked;\n            this.checkButton(previous || current, current);\n            if (current !== previous) {\n                this.emitValueChange();\n            }\n        }\n        current.setFocus();\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'a64e39352050b516f7dc82ce95a4bcff8431d1d0', role: \"tablist\", onClick: this.onClick, class: createColorClasses(this.color, {\n                [mode]: true,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'segment-activated': this.activated,\n                'segment-disabled': this.disabled,\n                'segment-scrollable': this.scrollable,\n            }) }, h(\"slot\", { key: 'bb3f3ec30e59e0461fa620d8961ab730cc802a4e', onSlotchange: this.onSlottedItemsChange })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"color\": [\"colorChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"],\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nSegment.style = {\n    ios: IonSegmentIosStyle0,\n    md: IonSegmentMdStyle0\n};\n\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;grid-row:1;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;max-width:100%;line-height:22px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color-step-350, var(--ion-background-color, #fff)));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}:host(.segment-button-layout-icon-end) ::slotted(ion-label){-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}.segment-button-indicator{-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px;left:0;right:0;top:0;bottom:0}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color-step-350, var(--ion-background-color, #fff)))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color-step-350, var(--ion-background-color, #fff))))}:host(.in-toolbar-color) .segment-button-indicator-background{background:var(--ion-color-contrast)}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\nconst IonSegmentButtonIosStyle0 = segmentButtonIosCss;\n\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;grid-row:1;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;max-width:100%;line-height:22px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #0054e9);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #0054e9));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}:host(.segment-button-layout-icon-end) ::slotted(ion-label){-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\nconst IonSegmentButtonMdStyle0 = segmentButtonMdCss;\n\nlet ids = 0;\nconst SegmentButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.segmentEl = null;\n        this.inheritedAttributes = {};\n        this.updateStyle = () => {\n            forceUpdate(this);\n        };\n        this.updateState = () => {\n            const { segmentEl } = this;\n            if (segmentEl) {\n                this.checked = segmentEl.value === this.value;\n                if (segmentEl.disabled) {\n                    this.disabled = true;\n                }\n            }\n        };\n        this.checked = false;\n        this.contentId = undefined;\n        this.disabled = false;\n        this.layout = 'icon-top';\n        this.type = 'button';\n        this.value = 'ion-sb-' + ids++;\n    }\n    valueChanged() {\n        this.updateState();\n    }\n    connectedCallback() {\n        const segmentEl = (this.segmentEl = this.el.closest('ion-segment'));\n        if (segmentEl) {\n            this.updateState();\n            addEventListener(segmentEl, 'ionSelect', this.updateState);\n            addEventListener(segmentEl, 'ionStyle', this.updateStyle);\n        }\n        // Prevent buttons from being disabled when associated with segment content\n        if (this.contentId && this.disabled) {\n            console.warn(`Segment Button: Segment buttons cannot be disabled when associated with an <ion-segment-content>.`);\n            this.disabled = false;\n        }\n    }\n    disconnectedCallback() {\n        const segmentEl = this.segmentEl;\n        if (segmentEl) {\n            removeEventListener(segmentEl, 'ionSelect', this.updateState);\n            removeEventListener(segmentEl, 'ionStyle', this.updateStyle);\n            this.segmentEl = null;\n        }\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = Object.assign({}, inheritAttributes(this.el, ['aria-label']));\n        // Return if there is no contentId defined\n        if (!this.contentId)\n            return;\n        // Attempt to find the Segment Content by its contentId\n        const segmentContent = document.getElementById(this.contentId);\n        // If no associated Segment Content exists, log an error and return\n        if (!segmentContent) {\n            console.error(`Segment Button: Unable to find Segment Content with id=\"${this.contentId}\".`);\n            return;\n        }\n        // Ensure the found element is a valid ION-SEGMENT-CONTENT\n        if (segmentContent.tagName !== 'ION-SEGMENT-CONTENT') {\n            console.error(`Segment Button: Element with id=\"${this.contentId}\" is not an <ion-segment-content> element.`);\n            return;\n        }\n    }\n    get hasLabel() {\n        return !!this.el.querySelector('ion-label');\n    }\n    get hasIcon() {\n        return !!this.el.querySelector('ion-icon');\n    }\n    /**\n     * @internal\n     * Focuses the native <button> element\n     * inside of ion-segment-button.\n     */\n    async setFocus() {\n        const { nativeEl } = this;\n        if (nativeEl !== undefined) {\n            nativeEl.focus();\n        }\n    }\n    render() {\n        const { checked, type, disabled, hasIcon, hasLabel, layout, segmentEl } = this;\n        const mode = getIonMode(this);\n        const hasSegmentColor = () => (segmentEl === null || segmentEl === void 0 ? void 0 : segmentEl.color) !== undefined;\n        return (h(Host, { key: 'f2f679a08b131cd35d63f649b9d1f1907df30a89', class: {\n                [mode]: true,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'in-segment': hostContext('ion-segment', this.el),\n                'in-segment-color': hasSegmentColor(),\n                'segment-button-has-label': hasLabel,\n                'segment-button-has-icon': hasIcon,\n                'segment-button-has-label-only': hasLabel && !hasIcon,\n                'segment-button-has-icon-only': hasIcon && !hasLabel,\n                'segment-button-disabled': disabled,\n                'segment-button-checked': checked,\n                [`segment-button-layout-${layout}`]: true,\n                'ion-activatable': true,\n                'ion-activatable-instant': true,\n                'ion-focusable': true,\n            } }, h(\"button\", Object.assign({ key: '8e887b5031da705a3695c0870be08696d66188de', \"aria-selected\": checked ? 'true' : 'false', role: \"tab\", ref: (el) => (this.nativeEl = el), type: type, class: \"button-native\", part: \"native\", disabled: disabled }, this.inheritedAttributes), h(\"span\", { key: '73b795c39cb09438e50922abf6b3a010e31fa2b6', class: \"button-inner\" }, h(\"slot\", { key: '9769ddc917d7e459bd80dcd81c10c379e73d1b3e' })), mode === 'md' && h(\"ion-ripple-effect\", { key: '8e4c06d6bae1034af8cc5db86fcca0ae72d042b1' })), h(\"div\", { key: 'ae73ee0e429e54a43269f99b6d3d7e1c6e8f60cc', part: \"indicator\", class: \"segment-button-indicator segment-button-indicator-animated\" }, h(\"div\", { key: 'd38eabe8161403799cfbad73dd6bf912d965442c', part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nSegmentButton.style = {\n    ios: IonSegmentButtonIosStyle0,\n    md: IonSegmentButtonMdStyle0\n};\n\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n"],"names":["r","registerInstance","c","createEvent","w","writeTask","h","e","Host","f","getElement","i","forceUpdate","raf","a","addEventListener","b","removeEventListener","inheritAttributes","isRTL","createColorClasses","hostContext","getIonMode","segmentIosCss","IonSegmentIosStyle0","segmentMdCss","IonSegmentMdStyle0","Segment","constructor","hostRef","ionChange","ionSelect","ionStyle","segmentViewEl","onClick","ev","current","target","previous","checked","tagName","value","emitValueChange","updateSegmentView","scrollable","checkButton","swipeGesture","setCheckedClasses","onSlottedItemsChange","valueChanged","getSegmentButton","selector","_a","_b","buttons","getButtons","filter","button","disabled","currIndex","findIndex","document","activeElement","length","activated","color","undefined","selectOnFocus","colorChanged","oldValue","emitStyle","swipeGestureChanged","gestureChanged","find","triggerScrollOnValueChange","emit","scrollActiveButtonIntoView","disabledChanged","gesture","enable","connectedCallback","getSegmentView","disconnectedCallback","componentWillLoad","componentDidLoad","_this","_asyncToGenerator","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","detail","valueBeforeGesture","activate","setNextIndex","setActivated","event","stopImmediatePropagation","Array","from","querySelectorAll","forEach","classList","toggle","clicked","getIndicator","root","shadowRoot","querySelector","previousIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","remove","style","setProperty","add","index","next","firstContentId","contentId","segmentContent","closest","handleSegmentViewScroll","scrollRatio","isManualScroll","dispatchedFrom","segmentEl","composedPath","includes","contains","nextIndex","Math","round","lastNextIndex","smoothScroll","btn","segmentView","setContent","activeButton","scrollContainerBox","activeButtonBox","activeButtonLeft","x","centeredX","newScrollPosition","scrollLeft","scrollTo","top","behavior","isEnd","rtl","rect","currentX","previousY","height","getRootNode","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","segment","onKeyDown","keyDownSelectsButton","key","preventDefault","setFocus","render","mode","role","class","onSlotchange","watchers","ios","md","segmentButtonIosCss","IonSegmentButtonIosStyle0","segmentButtonMdCss","IonSegmentButtonMdStyle0","ids","SegmentButton","inheritedAttributes","updateStyle","updateState","layout","type","console","warn","Object","assign","getElementById","error","hasLabel","hasIcon","_this2","nativeEl","focus","hasSegmentColor","ref","part","ion_segment","ion_segment_button"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}