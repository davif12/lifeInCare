{"version":3,"file":"2560.js","mappings":"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","sources":["./src/app/pages/cadastro-cuidador/cadastro-cuidador.routes.ts","./src/app/services/cuidador.service.ts","./src/app/pages/cadastro-cuidador/cadastro-cuidador.page.ts","./src/app/pages/cadastro-cuidador/cadastro-cuidador.page.html"],"sourcesContent":["import { Routes } from '@angular/router';\r\nimport { CadastroCuidadorPage } from './cadastro-cuidador.page';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CadastroCuidadorPage\r\n  }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CuidadorService {\r\n  private apiUrl = 'http://localhost:3000'; // URL do backend NestJS\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Cadastrar um novo cuidador\r\n  registrar(cuidador: any): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/auth/register`, cuidador);\r\n  }\r\n\r\n  // Obter perfil do cuidador (para uso futuro)\r\n  getPerfil(id: string): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/caregivers/${id}`);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { \r\n  IonButton, \r\n  IonContent, \r\n  IonHeader, \r\n  IonTitle, \r\n  IonToolbar, \r\n  IonInput, \r\n  IonItem, \r\n  IonLabel,\r\n  IonBackButton,\r\n  IonButtons,\r\n  IonIcon,\r\n  ToastController,\r\n  LoadingController\r\n} from '@ionic/angular/standalone';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { addIcons } from 'ionicons';\r\nimport { \r\n  lockClosedOutline, \r\n  mailOutline, \r\n  arrowBackOutline, \r\n  personOutline, \r\n  callOutline,\r\n  personAddOutline \r\n} from 'ionicons/icons';\r\nimport { CuidadorService } from '../../services/cuidador.service';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-cadastro-cuidador',\r\n  templateUrl: './cadastro-cuidador.page.html',\r\n  styleUrls: ['./cadastro-cuidador.page.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonHeader, \r\n    IonToolbar, \r\n    IonTitle, \r\n    IonContent, \r\n    IonButton, \r\n    IonInput, \r\n    IonItem, \r\n    IonLabel,\r\n    IonBackButton,\r\n    IonButtons,\r\n    IonIcon,\r\n    RouterLink\r\n  ]\r\n})\r\nexport class CadastroCuidadorPage {\r\n  nome: string = '';\r\n  email: string = '';\r\n  telefone: string = '';\r\n  password: string = '';\r\n  confirmPassword: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private cuidadorService: CuidadorService,\r\n    private router: Router,\r\n    private toastController: ToastController,\r\n    private loadingController: LoadingController\r\n  ) {\r\n    addIcons({\r\n      'lock-closed-outline': lockClosedOutline,\r\n      'mail-outline': mailOutline,\r\n      'arrow-back-outline': arrowBackOutline,\r\n      'person-outline': personOutline,\r\n      'call-outline': callOutline,\r\n      'person-add-outline': personAddOutline\r\n    });\r\n  }\r\n\r\n  async registrar() {\r\n    // Validações básicas\r\n    if (!this.nome || !this.email || !this.telefone || !this.password) {\r\n      await this.presentToast('Por favor, preencha todos os campos!', 'danger');\r\n      return;\r\n    }\r\n\r\n    if (this.password !== this.confirmPassword) {\r\n      await this.presentToast('As senhas não coincidem!', 'danger');\r\n      return;\r\n    }\r\n\r\n    // Mostrar loading\r\n    this.isLoading = true;\r\n    const loading = await this.loadingController.create({\r\n      message: 'Cadastrando...',\r\n      spinner: 'circles'\r\n    });\r\n    await loading.present();\r\n\r\n    try {\r\n      // Preparar dados para o backend (usando a mesma estrutura do DTO no backend)\r\n      const cuidadorData = {\r\n        name: this.nome,\r\n        email: this.email,\r\n        password: this.password\r\n      };\r\n\r\n      console.log('Enviando cadastro cuidador:', cuidadorData);\r\n\r\n      // Chamar o serviço de cadastro\r\n      const resp = await firstValueFrom(this.cuidadorService.registrar(cuidadorData));\r\n      console.log('Resposta cadastro cuidador:', resp);\r\n\r\n      // Tratar respostas com success=false mesmo com status 200\r\n      if (resp && resp.success === false) {\r\n        const msg = resp.message || 'Erro ao realizar cadastro.';\r\n        await loading.dismiss();\r\n        this.isLoading = false;\r\n        await this.presentToast(msg, 'danger');\r\n        return;\r\n      }\r\n\r\n      // Fechar loading\r\n      await loading.dismiss();\r\n      this.isLoading = false;\r\n      \r\n      // Mostrar mensagem de sucesso\r\n      await this.presentToast('Cadastro realizado com sucesso!', 'success');\r\n      \r\n      // Redirecionar para a página de login\r\n      this.router.navigate(['/login-cuidador']);\r\n    } catch (error: any) {\r\n      // Fechar loading\r\n      await loading.dismiss();\r\n      this.isLoading = false;\r\n      \r\n      // Log detalhado no console para diagnóstico\r\n      console.error('Cadastro cuidador erro:', {\r\n        status: error?.status,\r\n        statusText: error?.statusText,\r\n        url: error?.url,\r\n        error: error?.error,\r\n      });\r\n\r\n      // Mostrar mensagem de erro\r\n      let message = 'Erro ao realizar cadastro.';\r\n      const errMsg = error?.error?.message;\r\n      if (Array.isArray(errMsg)) {\r\n        message = errMsg[0];\r\n      } else if (typeof errMsg === 'string') {\r\n        message = errMsg;\r\n      } else if (typeof error?.message === 'string') {\r\n        message = error.message;\r\n      }\r\n      await this.presentToast(message, 'danger');\r\n    }\r\n  }\r\n\r\n  async presentToast(message: string, color: string = 'danger') {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 3000,\r\n      position: 'bottom',\r\n      color: color\r\n    });\r\n    \r\n    await toast.present();\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/login-cuidador\" icon=\"arrow-back-outline\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Cadastro de Cuidador</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"ion-padding\">\r\n  <div class=\"cadastro-container\">\r\n    <h1>LifeCare</h1>\r\n    <p class=\"subtitle\">Preencha os dados abaixo para se cadastrar</p>\r\n    \r\n    <form (ngSubmit)=\"registrar()\" class=\"cadastro-form\">\r\n      <ion-item class=\"form-item\">\r\n        <ion-icon name=\"person-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label position=\"floating\">Nome Completo</ion-label>\r\n        <ion-input \r\n          [(ngModel)]=\"nome\" \r\n          name=\"nome\" \r\n          type=\"text\" \r\n          required\r\n          autocomplete=\"name\">\r\n        </ion-input>\r\n      </ion-item>\r\n      \r\n      <ion-item class=\"form-item\">\r\n        <ion-icon name=\"mail-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label position=\"floating\">Email</ion-label>\r\n        <ion-input \r\n          [(ngModel)]=\"email\" \r\n          name=\"email\" \r\n          type=\"email\" \r\n          required\r\n          autocomplete=\"email\">\r\n        </ion-input>\r\n      </ion-item>\r\n      \r\n      <ion-item class=\"form-item\">\r\n        <ion-icon name=\"call-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label position=\"floating\">Telefone</ion-label>\r\n        <ion-input \r\n          [(ngModel)]=\"telefone\" \r\n          name=\"telefone\" \r\n          type=\"tel\" \r\n          required\r\n          autocomplete=\"tel\">\r\n        </ion-input>\r\n      </ion-item>\r\n      \r\n      <ion-item class=\"form-item\">\r\n        <ion-icon name=\"lock-closed-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label position=\"floating\">Senha</ion-label>\r\n        <ion-input \r\n          [(ngModel)]=\"password\" \r\n          name=\"password\" \r\n          type=\"password\" \r\n          required\r\n          autocomplete=\"new-password\">\r\n        </ion-input>\r\n      </ion-item>\r\n      \r\n      <ion-item class=\"form-item\">\r\n        <ion-icon name=\"lock-closed-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label position=\"floating\">Confirmar Senha</ion-label>\r\n        <ion-input \r\n          [(ngModel)]=\"confirmPassword\" \r\n          name=\"confirmPassword\" \r\n          type=\"password\" \r\n          required\r\n          autocomplete=\"new-password\">\r\n        </ion-input>\r\n      </ion-item>\r\n      \r\n      <ion-button \r\n        expand=\"block\" \r\n        type=\"submit\" \r\n        class=\"cadastro-button\"\r\n        [disabled]=\"isLoading\">\r\n        <ion-icon name=\"person-add-outline\" slot=\"start\" *ngIf=\"!isLoading\"></ion-icon>\r\n        {{ isLoading ? 'Cadastrando...' : 'Cadastrar' }}\r\n      </ion-button>\r\n    </form>\r\n    \r\n    <p class=\"login-link\">\r\n      Já tem uma conta? <a routerLink=\"/login-cuidador\">Faça login</a>\r\n    </p>\r\n  </div>\r\n</ion-content>\r\n"],"names":["CadastroCuidadorPage","routes","path","component","CuidadorService","http","apiUrl","constructor","registrar","cuidador","post","getPerfil","id","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","RouterLink","IonButton","IonContent","IonHeader","IonTitle","IonToolbar","IonInput","IonItem","IonLabel","IonBackButton","IonButtons","IonIcon","CommonModule","FormsModule","addIcons","lockClosedOutline","mailOutline","arrowBackOutline","personOutline","callOutline","personAddOutline","firstValueFrom","ɵɵelement","cuidadorService","router","toastController","loadingController","nome","email","telefone","password","confirmPassword","isLoading","_this","_asyncToGenerator","presentToast","loading","create","message","spinner","present","cuidadorData","name","console","log","resp","success","msg","dismiss","navigate","error","status","statusText","url","errMsg","Array","isArray","color","_this2","toast","duration","position","ɵɵdirectiveInject","i2","Router","i3","ToastController","LoadingController","selectors","decls","vars","consts","template","CadastroCuidadorPage_Template","rf","ctx","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵlistener","CadastroCuidadorPage_Template_form_ngSubmit_12_listener","ɵɵtwoWayListener","CadastroCuidadorPage_Template_ion_input_ngModelChange_17_listener","$event","ɵɵtwoWayBindingSet","CadastroCuidadorPage_Template_ion_input_ngModelChange_22_listener","CadastroCuidadorPage_Template_ion_input_ngModelChange_27_listener","CadastroCuidadorPage_Template_ion_input_ngModelChange_32_listener","CadastroCuidadorPage_Template_ion_input_ngModelChange_37_listener","ɵɵtemplate","CadastroCuidadorPage_ion_icon_39_Template","ɵɵadvance","ɵɵtwoWayProperty","ɵɵproperty","ɵɵtextInterpolate1","i4","NgIf","i5","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}